package com.guimard.finance.math;public abstract class MarkovChain extends StochasticProcess {    public MarkovChain(int T, double j_0) {        super(T, 1, j_0);    }    public abstract double q(int t, int i, int j);    private int j(int t, int i, double u) {        int j = 0;        double sum = 0;        while (sum < u) {            sum += q(t, i, j);            j++;        }        return j - 1;    }    public void timeStep(int t) {        int i = (int) path[t];         //current state        double u = RandomValue.U1();       //uniform draw from [0,1)        path[t + 1] = j(t, i, u);    }}